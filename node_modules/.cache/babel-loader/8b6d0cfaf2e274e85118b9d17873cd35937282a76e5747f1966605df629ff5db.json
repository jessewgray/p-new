{"ast":null,"code":"var _jsxFileName = \"/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/Comment.js\";\nimport React, { Component } from 'react';\nimport Stack from '@mui/material/Stack';\nimport SnackbarContent from '@mui/material/SnackbarContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Comment extends Component {\n  render() {\n    const styles = {\n      ma: {\n        margin: 'auto'\n      },\n      bg: {\n        background: 'white',\n        color: 'black'\n      }\n    };\n    const name = /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"jesse gray\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 23\n    }, this);\n    const comment = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this is whree the message will be\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 26\n    }, this);\n    const message = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [name, comment]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 26\n    }, this);\n    const post = /*#__PURE__*/_jsxDEV(SnackbarContent, {\n      style: styles.bg,\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 23\n    }, this);\n    const aList = ['jesse', 'holly', 'frank', 'ali'];\n    const showNames = aList.map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: name\n    }, \"{name}\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        sx: {\n          maxWidth: '80%'\n        },\n        style: styles.ma,\n        children: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: showNames\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Comment;","map":{"version":3,"names":["React","Component","Stack","SnackbarContent","jsxDEV","_jsxDEV","Comment","render","styles","ma","margin","bg","background","color","name","children","fileName","_jsxFileName","lineNumber","columnNumber","comment","message","post","style","aList","showNames","map","spacing","sx","maxWidth"],"sources":["/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/Comment.js"],"sourcesContent":["import React, {Component} from 'react'\n\nimport Stack from '@mui/material/Stack';\nimport SnackbarContent from '@mui/material/SnackbarContent';\n\n\nclass Comment extends Component{\n    render(){\n\n        const styles = {\n            ma:{\n                margin: 'auto'\n            },\n            bg: {\n                background: 'white',\n                color:'black'\n              }\n          };\n\n        const name = (<h1>jesse gray</h1>)\n        const comment = (<p>this is whree the message will be</p>)\n        const message = (<div>{name}{comment}</div>)\n        const post = (<SnackbarContent style={styles.bg} message={message}/>)\n\n\n        const aList = ['jesse', 'holly', 'frank', 'ali']\n        const showNames = aList.map((name) => (\n            <li key=\"{name}\">{name}</li>\n        ))\n\n        return(\n            <div>\n                <Stack spacing={2} sx={{ maxWidth: '80%' }} style={styles.ma}>\n                   {post}\n                </Stack>\n                <ul>{showNames}</ul>\n            </div>\n        )\n    }\n}\n\nexport default Comment;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AAEtC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,eAAe,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5D,MAAMC,OAAO,SAASL,SAAS;EAC3BM,MAAMA,CAAA,EAAE;IAEJ,MAAMC,MAAM,GAAG;MACXC,EAAE,EAAC;QACCC,MAAM,EAAE;MACZ,CAAC;MACDC,EAAE,EAAE;QACAC,UAAU,EAAE,OAAO;QACnBC,KAAK,EAAC;MACR;IACJ,CAAC;IAEH,MAAMC,IAAI,gBAAIT,OAAA;MAAAU,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAE;IAClC,MAAMC,OAAO,gBAAIf,OAAA;MAAAU,QAAA,EAAG;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IAC1D,MAAME,OAAO,gBAAIhB,OAAA;MAAAU,QAAA,GAAMD,IAAI,EAAEM,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAE;IAC5C,MAAMG,IAAI,gBAAIjB,OAAA,CAACF,eAAe;MAACoB,KAAK,EAAEf,MAAM,CAACG,EAAG;MAACU,OAAO,EAAEA;IAAQ;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAE;IAGrE,MAAMK,KAAK,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;IAChD,MAAMC,SAAS,GAAGD,KAAK,CAACE,GAAG,CAAEZ,IAAI,iBAC7BT,OAAA;MAAAU,QAAA,EAAkBD;IAAI,GAAd,QAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAC9B,CAAC;IAEF,oBACId,OAAA;MAAAU,QAAA,gBACIV,OAAA,CAACH,KAAK;QAACyB,OAAO,EAAE,CAAE;QAACC,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAM,CAAE;QAACN,KAAK,EAAEf,MAAM,CAACC,EAAG;QAAAM,QAAA,EACzDO;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACRd,OAAA;QAAAU,QAAA,EAAKU;MAAS;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAEd;AACJ;AAEA,eAAeb,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}