{"ast":null,"code":"var _jsxFileName = \"/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/DisplayInfo.js\";\nimport React, { Component } from 'react';\nimport Comment from './Comment';\nimport Stack from '@mui/material/Stack';\nimport SnackbarContent from '@mui/material/SnackbarContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass DisplayInfo extends Component {\n  render() {\n    const styles = {\n      ma: {\n        margin: 'auto'\n      },\n      bg: {\n        background: 'white',\n        color: 'black'\n      }\n    };\n    let stArray;\n    let getData = function () {\n      fetch('http://localhost:5000/get').then(response => response.json()).then(data => {\n        console.log(data.dbArray);\n        const theItems = data.dbArray.map(anObj => /*#__PURE__*/_jsxDEV(SnackbarContent, {\n          style: styles.bg,\n          message: anObj.name + anObj.comment\n        }, anObj.name.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 30\n        }, this));\n      }).catch(error => console.error(error));\n    }();\n\n    // const logThis = function(){\n    //     //add the parent Stack element and create the snackbarcontnet inside the loop then add log this to render.\n    //     const listObj = stArray.forEach((anything) => {\n    //         let theName = anything.name;\n    //         let theComment = anything.comment;\n    //         let theLI = `<li key={theName.toString()}>name: ${theName}, comment: ${theComment}</li>`\n    //         const theUL = window.document.querySelector('.theList')\n    //         theUL.insertAdjacentHTML('afterend', theLI)\n    //     })\n    // }\n\n    //add the parent Stack element and create the snackbarcontnet inside the loop then add log this to render.\n    const listObj = stArray.map(anything => /*#__PURE__*/_jsxDEV(SnackbarContent, {\n      style: styles.bg,\n      message: anything.name + anything.comment\n    }, anything.name.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this));\n    const newNames = [{\n      name: 'jesse',\n      comment: 'this is jesses comment'\n    }, {\n      name: 'holly',\n      comment: 'this is hollys comment'\n    }];\n    const showComments = newNames.map(obj => /*#__PURE__*/_jsxDEV(SnackbarContent, {\n      style: styles.bg,\n      message: obj.name + obj.comment\n    }, obj.name.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 18\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"this is the return from the api\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showData\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"theList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Comment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        sx: {\n          maxWidth: '80%'\n        },\n        style: styles.ma,\n        children: showComments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DisplayInfo;","map":{"version":3,"names":["React","Component","Comment","Stack","SnackbarContent","jsxDEV","_jsxDEV","DisplayInfo","render","styles","ma","margin","bg","background","color","stArray","getData","fetch","then","response","json","data","console","log","dbArray","theItems","map","anObj","style","message","name","comment","toString","fileName","_jsxFileName","lineNumber","columnNumber","catch","error","listObj","anything","newNames","showComments","obj","children","className","spacing","sx","maxWidth"],"sources":["/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/DisplayInfo.js"],"sourcesContent":["import React, {Component} from 'react'\n\nimport Comment from './Comment';\n\nimport Stack from '@mui/material/Stack';\nimport SnackbarContent from '@mui/material/SnackbarContent';\n\n\nclass DisplayInfo extends Component{\n\n    render(){\n\n        const styles = {\n            ma:{\n                margin: 'auto'\n            },\n            bg: {\n                background: 'white',\n                color:'black'\n              }\n          };\n\n        let stArray\n        let getData = function(){\n            fetch('http://localhost:5000/get')\n                    .then(response => response.json())\n                    .then((data) => {\n                        console.log(data.dbArray)\n                        const theItems = data.dbArray.map((anObj) => (\n                            (<SnackbarContent key={anObj.name.toString()} style={styles.bg} message={anObj.name + anObj.comment}/>)\n                        ))\n                    })\n                    .catch(error => console.error(error));\n                   \n           }()\n\n            // const logThis = function(){\n            //     //add the parent Stack element and create the snackbarcontnet inside the loop then add log this to render.\n            //     const listObj = stArray.forEach((anything) => {\n            //         let theName = anything.name;\n            //         let theComment = anything.comment;\n            //         let theLI = `<li key={theName.toString()}>name: ${theName}, comment: ${theComment}</li>`\n            //         const theUL = window.document.querySelector('.theList')\n            //         theUL.insertAdjacentHTML('afterend', theLI)\n            //     })\n            // }\n\n            \n                //add the parent Stack element and create the snackbarcontnet inside the loop then add log this to render.\n                const listObj = stArray.map((anything) => (\n                   (<SnackbarContent key={anything.name.toString()} style={styles.bg} message={anything.name + anything.comment}/>)\n                ))\n            \n\n            const newNames = [{name:'jesse', comment:'this is jesses comment'}, {name:'holly', comment:'this is hollys comment'}]\n            const showComments = newNames.map((obj) => (\n                (<SnackbarContent key={obj.name.toString()} style={styles.bg} message={obj.name + obj.comment}/>)\n            ))\n           \n\n\n        return(\n            <div>                \n                <p>this is the return from the api</p>\n                <div className=\"showData\">\n                    <ul className=\"theList\"></ul>\n                </div>\n                <Comment/>\n\n                <Stack spacing={2} sx={{ maxWidth: '80%' }} style={styles.ma}>\n                   {showComments}\n                   \n                </Stack>\n          \n            </div>   \n        )\n    }\n}\n\nexport default DisplayInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}