{"ast":null,"code":"var _jsxFileName = \"/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/AddNew.js\";\nimport React, { Component } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Divider from '@mui/material/Divider';\nimport Avatar from '@mui/material/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AddNew extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      comment: '',\n      time: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(event) {\n    let someName = document.querySelector('.inputName').value;\n    let someComment = document.querySelector('.inputComment').value;\n    this.setState({\n      name: someName,\n      comment: someComment\n    });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    let now = new Date();\n    this.setState({\n      time: now\n    });\n    fetch('http://localhost:5000/post', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify({\n        \"name\": this.state.name,\n        \"comment\": this.state.comment,\n        \"time\": this.state.time\n      })\n    }).then(function (response) {\n      console.log(response);\n      return response.json();\n    });\n    let showLI = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: \"Remy Sharp\",\n            src: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          justifyContent: \"left\",\n          item: true,\n          xs: true,\n          zeroMinWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              margin: 0,\n              textAlign: \"left\"\n            },\n            children: this.state.someName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: this.state.someComment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: \"left\",\n              color: \"gray\"\n            },\n            children: \"posted 1 minute ago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"fullWidth\",\n        style: {\n          margin: \"30px 0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }, this);\n    let last = window.document.getElementsByClassName('aComment').length - 1;\n    let getLast = window.document.getElementsByClassName('aComment')[last];\n    getLast.append(showLI);\n    console.log(showLI);\n\n    //empty inputs after submit\n    this.setState({\n      name: \"\",\n      comment: \"\"\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"this is the form section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputName\",\n            type: \"text\",\n            value: this.state.name,\n            name: this.state.name,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Comment:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputComment\",\n            type: \"text\",\n            value: this.state.comment,\n            name: this.state.comment,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default AddNew;","map":{"version":3,"names":["React","Component","Paper","Grid","Divider","Avatar","jsxDEV","_jsxDEV","AddNew","constructor","props","state","name","comment","time","handleChange","bind","handleSubmit","event","someName","document","querySelector","value","someComment","setState","preventDefault","now","Date","fetch","method","headers","body","JSON","stringify","then","response","console","log","json","showLI","children","container","wrap","spacing","item","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","xs","zeroMinWidth","style","margin","textAlign","color","variant","last","window","getElementsByClassName","length","getLast","append","render","onSubmit","className","type","onChange"],"sources":["/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/AddNew.js"],"sourcesContent":["import React, {Component} from 'react'\n\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Divider from '@mui/material/Divider';\nimport Avatar from '@mui/material/Avatar'\n\nclass AddNew extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            comment: '',\n            time: ''\n        };\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n      \n\n      handleChange(event) {\n        let someName = document.querySelector('.inputName').value;\n        let someComment = document.querySelector('.inputComment').value;\n        this.setState({\n            name: someName,\n            comment: someComment\n        });\n      }\n    \n      handleSubmit(event) {\n        event.preventDefault();\n            let now = new Date;\n            this.setState({time: now});\n\n            fetch('http://localhost:5000/post', {\n              method: 'POST',\n              headers: {'Content-Type': 'application/json'},\n              // We convert the React state to JSON and send it as the POST body\n              body: JSON.stringify({\"name\": this.state.name, \"comment\": this.state.comment, \"time\": this.state.time})\n          }).then(function(response) {\n              console.log(response)\n              return response.json();\n          });\n\n        let showLI = (<div>\n          <Grid container wrap=\"nowrap\" spacing={2}>\n              <Grid item>\n                  <Avatar alt=\"Remy Sharp\" src='' />\n              </Grid>\n              <Grid justifyContent=\"left\" item xs zeroMinWidth>\n                  <h4 style={{ margin: 0, textAlign: \"left\" }}>{this.state.someName}</h4>\n                  <p style={{ textAlign: \"left\" }}>{this.state.someComment}</p>\n                  <p style={{ textAlign: \"left\", color: \"gray\" }}>posted 1 minute ago</p>\n              </Grid>\n          </Grid>\n          <Divider variant=\"fullWidth\" style={{ margin: \"30px 0\" }} /></div>)\n          \n        let last = window.document.getElementsByClassName('aComment').length - 1;\n        let getLast = window.document.getElementsByClassName('aComment')[last]\n        getLast.append(showLI)\n        console.log(showLI)\n        \n        //empty inputs after submit\n        this.setState({\n            name: \"\",\n            comment:\"\"\n        });\n        \n      }\n\n\n\n    render(){\n        return(\n            <div>\n                <p>this is the form section</p>\n\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                    Name:\n                    <input className=\"inputName\" type=\"text\" value={this.state.name} name={this.state.name} onChange={this.handleChange} />\n                    </label>\n                    <label>\n                    Comment:\n                    <input className=\"inputComment\" type=\"text\" value={this.state.comment} name={this.state.comment} onChange={this.handleChange} />\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddNew;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AAEtC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,MAAM,SAASP,SAAS;EAE1BQ,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE;IACV,CAAC;IAED,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACD,IAAI,CAAC,IAAI,CAAC;EAClD;EAGAD,YAAYA,CAACG,KAAK,EAAE;IAClB,IAAIC,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC,CAACC,KAAK;IACzD,IAAIC,WAAW,GAAGH,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC,CAACC,KAAK;IAC/D,IAAI,CAACE,QAAQ,CAAC;MACVZ,IAAI,EAAEO,QAAQ;MACdN,OAAO,EAAEU;IACb,CAAC,CAAC;EACJ;EAEAN,YAAYA,CAACC,KAAK,EAAE;IAClBA,KAAK,CAACO,cAAc,CAAC,CAAC;IAClB,IAAIC,GAAG,GAAG,IAAIC,IAAI,CAAD,CAAC;IAClB,IAAI,CAACH,QAAQ,CAAC;MAACV,IAAI,EAAEY;IAAG,CAAC,CAAC;IAE1BE,KAAK,CAAC,4BAA4B,EAAE;MAClCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7C;MACAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAC,MAAM,EAAE,IAAI,CAACtB,KAAK,CAACC,IAAI;QAAE,SAAS,EAAE,IAAI,CAACD,KAAK,CAACE,OAAO;QAAE,MAAM,EAAE,IAAI,CAACF,KAAK,CAACG;MAAI,CAAC;IAC1G,CAAC,CAAC,CAACoB,IAAI,CAAC,UAASC,QAAQ,EAAE;MACvBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,OAAOA,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC;IAEJ,IAAIC,MAAM,gBAAIhC,OAAA;MAAAiC,QAAA,gBACZjC,OAAA,CAACJ,IAAI;QAACsC,SAAS;QAACC,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAE,CAAE;QAAAH,QAAA,gBACrCjC,OAAA,CAACJ,IAAI;UAACyC,IAAI;UAAAJ,QAAA,eACNjC,OAAA,CAACF,MAAM;YAACwC,GAAG,EAAC,YAAY;YAACC,GAAG,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,eACP3C,OAAA,CAACJ,IAAI;UAACgD,cAAc,EAAC,MAAM;UAACP,IAAI;UAACQ,EAAE;UAACC,YAAY;UAAAb,QAAA,gBAC5CjC,OAAA;YAAI+C,KAAK,EAAE;cAAEC,MAAM,EAAE,CAAC;cAAEC,SAAS,EAAE;YAAO,CAAE;YAAAhB,QAAA,EAAE,IAAI,CAAC7B,KAAK,CAACQ;UAAQ;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvE3C,OAAA;YAAG+C,KAAK,EAAE;cAAEE,SAAS,EAAE;YAAO,CAAE;YAAAhB,QAAA,EAAE,IAAI,CAAC7B,KAAK,CAACY;UAAW;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7D3C,OAAA;YAAG+C,KAAK,EAAE;cAAEE,SAAS,EAAE,MAAM;cAAEC,KAAK,EAAE;YAAO,CAAE;YAAAjB,QAAA,EAAC;UAAmB;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACP3C,OAAA,CAACH,OAAO;QAACsD,OAAO,EAAC,WAAW;QAACJ,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAS;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAE;IAErE,IAAIS,IAAI,GAAGC,MAAM,CAACxC,QAAQ,CAACyC,sBAAsB,CAAC,UAAU,CAAC,CAACC,MAAM,GAAG,CAAC;IACxE,IAAIC,OAAO,GAAGH,MAAM,CAACxC,QAAQ,CAACyC,sBAAsB,CAAC,UAAU,CAAC,CAACF,IAAI,CAAC;IACtEI,OAAO,CAACC,MAAM,CAACzB,MAAM,CAAC;IACtBH,OAAO,CAACC,GAAG,CAACE,MAAM,CAAC;;IAEnB;IACA,IAAI,CAACf,QAAQ,CAAC;MACVZ,IAAI,EAAE,EAAE;MACRC,OAAO,EAAC;IACZ,CAAC,CAAC;EAEJ;EAIFoD,MAAMA,CAAA,EAAE;IACJ,oBACI1D,OAAA;MAAAiC,QAAA,gBACIjC,OAAA;QAAAiC,QAAA,EAAG;MAAwB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAE/B3C,OAAA;QAAM2D,QAAQ,EAAE,IAAI,CAACjD,YAAa;QAAAuB,QAAA,gBAC9BjC,OAAA;UAAAiC,QAAA,GAAO,OAEP,eAAAjC,OAAA;YAAO4D,SAAS,EAAC,WAAW;YAACC,IAAI,EAAC,MAAM;YAAC9C,KAAK,EAAE,IAAI,CAACX,KAAK,CAACC,IAAK;YAACA,IAAI,EAAE,IAAI,CAACD,KAAK,CAACC,IAAK;YAACyD,QAAQ,EAAE,IAAI,CAACtD;UAAa;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChH,CAAC,eACR3C,OAAA;UAAAiC,QAAA,GAAO,UAEP,eAAAjC,OAAA;YAAO4D,SAAS,EAAC,cAAc;YAACC,IAAI,EAAC,MAAM;YAAC9C,KAAK,EAAE,IAAI,CAACX,KAAK,CAACE,OAAQ;YAACD,IAAI,EAAE,IAAI,CAACD,KAAK,CAACE,OAAQ;YAACwD,QAAQ,EAAE,IAAI,CAACtD;UAAa;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzH,CAAC,eACR3C,OAAA;UAAO6D,IAAI,EAAC,QAAQ;UAAC9C,KAAK,EAAC;QAAQ;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEd;AACJ;AAEA,eAAe1C,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}