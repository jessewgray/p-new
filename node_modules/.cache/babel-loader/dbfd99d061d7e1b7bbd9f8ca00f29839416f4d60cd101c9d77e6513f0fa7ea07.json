{"ast":null,"code":"var _jsxFileName = \"/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/DisplayInfo.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass DisplayInfo extends Component {\n  render() {\n    const stArray = [];\n    let getData = function () {\n      fetch('http://localhost:5000/get').then(response => response.json()).then(data => {\n        //console.log(data.dbArray);\n        data.dbArray.map(x => {\n          //console.log(x)\n          stArray.push(x);\n        });\n      }).catch(error => console.error(error));\n      console.log(stArray);\n    }();\n    stArray.forEach(theObj => {\n      console.log(theObj);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"this is the return from the api\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showData\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DisplayInfo;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","DisplayInfo","render","stArray","getData","fetch","then","response","json","data","dbArray","map","x","push","catch","error","console","log","forEach","theObj","children","fileName","_jsxFileName","lineNumber","columnNumber","className"],"sources":["/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/DisplayInfo.js"],"sourcesContent":["import React, {Component} from 'react'\n\nclass DisplayInfo extends Component{\n\n    render(){\n\n        const stArray = []\n        let getData = function(){\n\n            fetch('http://localhost:5000/get')\n                    .then(response => response.json())\n                    .then(data => {\n                       //console.log(data.dbArray);\n                       data.dbArray.map((x) => {\n                            //console.log(x)\n                            stArray.push(x)\n                       })\n                    })\n                    .catch(error => console.error(error));\n                    console.log(stArray)\n            }()\n\n            stArray.forEach((theObj) => {\n                console.log(theObj)\n            })\n          \n\n        return(\n            <div>\n                <p>this is the return from the api</p>\n                <div className=\"showData\">\n                    <ul>{}</ul>\n                </div>\n            </div>\n            \n\n            \n        )\n    }\n}\n\nexport default DisplayInfo;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,SAASH,SAAS;EAE/BI,MAAMA,CAAA,EAAE;IAEJ,MAAMC,OAAO,GAAG,EAAE;IAClB,IAAIC,OAAO,GAAG,YAAU;MAEpBC,KAAK,CAAC,2BAA2B,CAAC,CACzBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACX;QACAA,IAAI,CAACC,OAAO,CAACC,GAAG,CAAEC,CAAC,IAAK;UACnB;UACAT,OAAO,CAACU,IAAI,CAACD,CAAC,CAAC;QACpB,CAAC,CAAC;MACL,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;MACrCC,OAAO,CAACC,GAAG,CAACd,OAAO,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEHA,OAAO,CAACe,OAAO,CAAEC,MAAM,IAAK;MACxBH,OAAO,CAACC,GAAG,CAACE,MAAM,CAAC;IACvB,CAAC,CAAC;IAGN,oBACInB,OAAA;MAAAoB,QAAA,gBACIpB,OAAA;QAAAoB,QAAA,EAAG;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACtCxB,OAAA;QAAKyB,SAAS,EAAC,UAAU;QAAAL,QAAA,eACrBpB,OAAA;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAKd;AACJ;AAEA,eAAevB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}