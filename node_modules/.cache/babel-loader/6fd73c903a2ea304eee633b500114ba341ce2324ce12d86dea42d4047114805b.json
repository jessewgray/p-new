{"ast":null,"code":"var _jsxFileName = \"/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/AddNew.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AddNew extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      comment: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(event) {\n    let someName = document.querySelector('.inputName').value;\n    let someComment = document.querySelector('.inputComment').value;\n    this.setState({\n      name: someName,\n      comment: someComment\n    });\n  }\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.name + ' ' + this.state.comment);\n    event.preventDefault();\n    this.setState({\n      name: \"\",\n      comment: \"\"\n    });\n    onSubmit = e => {\n      e.preventDefault();\n      // get form data out of state\n      const {\n        name,\n        comment\n      } = this.state;\n      fetch('http://localhost:5000/post', {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        }.then(result => {\n          console.log(result);\n        })\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"this is the form section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputName\",\n            type: \"text\",\n            value: this.state.name,\n            name: \"personName\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Comment:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputComment\",\n            type: \"text\",\n            value: this.state.comment,\n            name: \"comment\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default AddNew;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","AddNew","constructor","props","state","name","comment","handleChange","bind","handleSubmit","event","someName","document","querySelector","value","someComment","setState","alert","preventDefault","onSubmit","e","fetch","method","headers","then","result","console","log","render","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onChange"],"sources":["/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/AddNew.js"],"sourcesContent":["import React, {Component} from 'react'\n\n\nclass AddNew extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            comment: ''\n        };\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n      \n\n      handleChange(event) {\n        let someName = document.querySelector('.inputName').value;\n        let someComment = document.querySelector('.inputComment').value;\n        this.setState({\n            name: someName,\n            comment: someComment\n        });\n      }\n    \n      handleSubmit(event) {\n        alert('A name was submitted: ' + this.state.name + ' ' + this.state.comment);\n        event.preventDefault();\n\n\n\n        this.setState({\n            name: \"\",\n            comment:\"\"\n        });\n        \n\n        onSubmit = (e) => {\n            e.preventDefault();\n            // get form data out of state\n            const { name, comment } = this.state;\n        \n            fetch('http://localhost:5000/post' , {\n              method: \"POST\",\n              headers: {\n                'Content-type': 'application/json'\n              }\n              .then((result) => {\n                console.log(result)\n              })\n          })\n        }\n\n\n\n      }\n\n\n    render(){\n        return(\n            <div>\n                <p>this is the form section</p>\n\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                    Name:\n                    <input className=\"inputName\" type=\"text\" value={this.state.name} name=\"personName\" onChange={this.handleChange} />\n                    </label>\n                    <label>\n                    Comment:\n                    <input className=\"inputComment\" type=\"text\" value={this.state.comment} name=\"comment\"onChange={this.handleChange} />\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddNew;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}