{"ast":null,"code":"var _jsxFileName = \"/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/DisplayInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, Component } from 'react';\nimport Stack from '@mui/material/Stack';\nimport SnackbarContent from '@mui/material/SnackbarContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DisplayInfo() {\n  _s();\n  const [comments, setComments] = useState('');\n  const styles = {\n    ma: {\n      margin: 'auto'\n    },\n    bg: {\n      background: 'white',\n      color: 'black'\n    }\n  };\n  let stArray = [];\n  let getData = function () {\n    fetch('http://localhost:5000/get').then(response => response.json()).then(data => {\n      //console.log(data.dbArray)\n      data.dbArray.forEach(element => {\n        stArray.push({\n          name: element.name,\n          comment: element.comment\n        });\n      });\n    }).catch(error => console.error(error));\n  }();\n\n  // const newNames = [{name:'jesse', comment:'this is jesses comment'}, {name:'holly', comment:'this is hollys comment'}]\n  // const showComments = newNames.map((obj) => (\n  //     (<SnackbarContent key={obj.name.toString()} style={styles.bg} message={obj.name + obj.comment}/>)\n  // ))\n\n  const waitList = () => {\n    const showNewComments = stArray.map((nextObj, i) => /*#__PURE__*/_jsxDEV(SnackbarContent, {\n      className: \"snackbar-multi-line\",\n      style: styles.bg,\n      message: nextObj.name + nextObj.comment\n    }, i.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }, this));\n    setComments(showNewComments);\n    console.log(showNewComments);\n  };\n\n  // setTimeout(function() {waitList()}, 2000);\n  // console.log(comments)\n\n  const callComments = () => {\n    setTimeout(() => waitList(), 2000);\n    setTimeout(() => clearTimeout(), 4000);\n  };\n  callComments();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this is the return from the api\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showData\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"theList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      sx: {\n        maxWidth: '80%'\n      },\n      style: styles.ma,\n      children: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 13\n  }, this);\n}\n_s(DisplayInfo, \"3WsHwHTZDASED6+Hjhi4AAMgALI=\");\n_c = DisplayInfo;\nexport default DisplayInfo;\nvar _c;\n$RefreshReg$(_c, \"DisplayInfo\");","map":{"version":3,"names":["React","useState","Component","Stack","SnackbarContent","jsxDEV","_jsxDEV","DisplayInfo","_s","comments","setComments","styles","ma","margin","bg","background","color","stArray","getData","fetch","then","response","json","data","dbArray","forEach","element","push","name","comment","catch","error","console","waitList","showNewComments","map","nextObj","i","className","style","message","toString","fileName","_jsxFileName","lineNumber","columnNumber","log","callComments","setTimeout","clearTimeout","children","spacing","sx","maxWidth","_c","$RefreshReg$"],"sources":["/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/DisplayInfo.js"],"sourcesContent":["import React, {useState, Component} from 'react'\n\nimport Stack from '@mui/material/Stack';\nimport SnackbarContent from '@mui/material/SnackbarContent';\n\n\n\nfunction DisplayInfo(){\n\n    const [comments, setComments] = useState('');\n\n    \n        const styles = {\n            ma:{\n                margin: 'auto'\n            },\n            bg: {\n                background: 'white',\n                color:'black'\n              }\n          };\n\n\n         \n        let stArray = []\n        let getData = function(){\n            fetch('http://localhost:5000/get')\n                    .then(response => response.json())\n                    .then((data) => {\n                        //console.log(data.dbArray)\n                        data.dbArray.forEach((element) => {\n                           stArray.push({name:element.name, comment:element.comment})\n                    })\n                })\n                    .catch(error => console.error(error));    \n           }()\n\n       \n          \n            // const newNames = [{name:'jesse', comment:'this is jesses comment'}, {name:'holly', comment:'this is hollys comment'}]\n            // const showComments = newNames.map((obj) => (\n            //     (<SnackbarContent key={obj.name.toString()} style={styles.bg} message={obj.name + obj.comment}/>)\n            // ))\n               \n           \n\n            \n            const waitList = () => {\n                const showNewComments = stArray.map((nextObj, i) => (\n                    (<SnackbarContent className=\"snackbar-multi-line\" key={i.toString()} style={styles.bg} message={\n                        nextObj.name +\n                        nextObj.comment\n                    }/>)\n                ))\n                setComments(showNewComments)\n                console.log(showNewComments)\n            }\n            \n            \n            // setTimeout(function() {waitList()}, 2000);\n            // console.log(comments)\n\n            const callComments = () => {\n                setTimeout(() => waitList(), 2000);\n                setTimeout(() => clearTimeout(), 4000);\n            }\n            callComments()\n            \n\n        \n            \n            \n\n        return(\n            <div>                \n                <p>this is the return from the api</p>\n                <div className=\"showData\">\n                    <ul className=\"theList\"></ul>\n                </div>\n                <Stack spacing={2} sx={{ maxWidth: '80%' }} style={styles.ma}>\n                   {/* {showComments} */}\n                   {comments}\n                </Stack>\n          \n            </div>   \n        )\n    }\n\n\nexport default DisplayInfo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAEhD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,eAAe,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI5D,SAASC,WAAWA,CAAA,EAAE;EAAAC,EAAA;EAElB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAGxC,MAAMU,MAAM,GAAG;IACXC,EAAE,EAAC;MACCC,MAAM,EAAE;IACZ,CAAC;IACDC,EAAE,EAAE;MACAC,UAAU,EAAE,OAAO;MACnBC,KAAK,EAAC;IACR;EACJ,CAAC;EAIH,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIC,OAAO,GAAG,YAAU;IACpBC,KAAK,CAAC,2BAA2B,CAAC,CACzBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAEG,IAAI,IAAK;MACZ;MACAA,IAAI,CAACC,OAAO,CAACC,OAAO,CAAEC,OAAO,IAAK;QAC/BT,OAAO,CAACU,IAAI,CAAC;UAACC,IAAI,EAACF,OAAO,CAACE,IAAI;UAAEC,OAAO,EAACH,OAAO,CAACG;QAAO,CAAC,CAAC;MACjE,CAAC,CAAC;IACN,CAAC,CAAC,CACGC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC9C,CAAC,CAAC,CAAC;;EAIF;EACA;EACA;EACA;;EAKA,MAAME,QAAQ,GAAGA,CAAA,KAAM;IACnB,MAAMC,eAAe,GAAGjB,OAAO,CAACkB,GAAG,CAAC,CAACC,OAAO,EAAEC,CAAC,kBAC1C/B,OAAA,CAACF,eAAe;MAACkC,SAAS,EAAC,qBAAqB;MAAoBC,KAAK,EAAE5B,MAAM,CAACG,EAAG;MAAC0B,OAAO,EAC1FJ,OAAO,CAACR,IAAI,GACZQ,OAAO,CAACP;IACX,GAHsDQ,CAAC,CAACI,QAAQ,CAAC,CAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGjE,CACL,CAAC;IACFnC,WAAW,CAACwB,eAAe,CAAC;IAC5BF,OAAO,CAACc,GAAG,CAACZ,eAAe,CAAC;EAChC,CAAC;;EAGD;EACA;;EAEA,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACvBC,UAAU,CAAC,MAAMf,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC;IAClCe,UAAU,CAAC,MAAMC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC;EAC1C,CAAC;EACDF,YAAY,CAAC,CAAC;EAOlB,oBACIzC,OAAA;IAAA4C,QAAA,gBACI5C,OAAA;MAAA4C,QAAA,EAAG;IAA+B;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtCvC,OAAA;MAAKgC,SAAS,EAAC,UAAU;MAAAY,QAAA,eACrB5C,OAAA;QAAIgC,SAAS,EAAC;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACNvC,OAAA,CAACH,KAAK;MAACgD,OAAO,EAAE,CAAE;MAACC,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAM,CAAE;MAACd,KAAK,EAAE5B,MAAM,CAACC,EAAG;MAAAsC,QAAA,EAEzDzC;IAAQ;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEP,CAAC;AAEd;AAACrC,EAAA,CA/EID,WAAW;AAAA+C,EAAA,GAAX/C,WAAW;AAkFpB,eAAeA,WAAW;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}