{"ast":null,"code":"var _jsxFileName = \"/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/DisplayInfo.js\";\nimport React, { Component } from 'react';\nimport Comment from './Comment';\nimport Stack from '@mui/material/Stack';\nimport SnackbarContent from '@mui/material/SnackbarContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass DisplayInfo extends Component {\n  render() {\n    const styles = {\n      ma: {\n        margin: 'auto'\n      },\n      bg: {\n        background: 'white',\n        color: 'black'\n      }\n    };\n    const stArray = [];\n    let getData = function () {\n      fetch('http://localhost:5000/get').then(response => response.json()).then(data => {\n        //console.log(data.dbArray);\n        data.dbArray.map(x => {\n          //console.log(x)\n          stArray.push(x);\n        });\n        logThis();\n      }).catch(error => console.error(error));\n    }();\n    const logThis = function () {\n      //add the parent Stack element and create the snackbarcontnet inside the loop then add log this to render.\n      const listObj = stArray.forEach(anything => {\n        let theName = anything.name;\n        let theComment = anything.comment;\n        let theLI = `<li key={theName.toString()}>name: ${theName}, comment: ${theComment}</li>`;\n        const theUL = window.document.querySelector('.theList');\n        theUL.insertAdjacentHTML('afterend', theLI);\n      });\n    };\n    const letsSee = () => {\n      console.log(stArray);\n      stArray.map(newItem => {\n        let aName = newItem.name;\n        let aComment = newItem.comment;\n        console.log(newItem)( /*#__PURE__*/_jsxDEV(SnackbarContent, {\n          style: styles.bg,\n          comment: aName + \", \" + aComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 22\n        }, this));\n      });\n    };\n    const nameList = [{\n      'name': 'jesse'\n    }, {\n      'name': 'holly'\n    }];\n    const showNames = () => {\n      nameList.map(oneName => {\n        console.log(oneName.name)( /*#__PURE__*/_jsxDEV(\"li\", {\n          children: oneName.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 22\n        }, this));\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"this is the return from the api\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showData\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"theList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Comment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: showNames\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DisplayInfo;","map":{"version":3,"names":["React","Component","Comment","Stack","SnackbarContent","jsxDEV","_jsxDEV","DisplayInfo","render","styles","ma","margin","bg","background","color","stArray","getData","fetch","then","response","json","data","dbArray","map","x","push","logThis","catch","error","console","listObj","forEach","anything","theName","name","theComment","comment","theLI","theUL","window","document","querySelector","insertAdjacentHTML","letsSee","log","newItem","aName","aComment","style","fileName","_jsxFileName","lineNumber","columnNumber","nameList","showNames","oneName","children","className"],"sources":["/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/DisplayInfo.js"],"sourcesContent":["import React, {Component} from 'react'\n\nimport Comment from './Comment';\n\nimport Stack from '@mui/material/Stack';\nimport SnackbarContent from '@mui/material/SnackbarContent';\n\n\nclass DisplayInfo extends Component{\n\n    render(){\n\n        const styles = {\n            ma:{\n                margin: 'auto'\n            },\n            bg: {\n                background: 'white',\n                color:'black'\n              }\n          };\n\n        const stArray = []\n        let getData = function(){\n            fetch('http://localhost:5000/get')\n                    .then(response => response.json())\n                    .then(data => {\n                       //console.log(data.dbArray);\n                       data.dbArray.map((x) => {\n                            //console.log(x)\n                            stArray.push(x)\n                       })\n                       logThis();\n                    })\n                    .catch(error => console.error(error));\n                   \n            }()\n\n            const logThis = function(){\n                //add the parent Stack element and create the snackbarcontnet inside the loop then add log this to render.\n                const listObj = stArray.forEach((anything) => {\n                    let theName = anything.name;\n                    let theComment = anything.comment;\n                    let theLI = `<li key={theName.toString()}>name: ${theName}, comment: ${theComment}</li>`\n                    const theUL = window.document.querySelector('.theList')\n                    theUL.insertAdjacentHTML('afterend', theLI)\n                })\n            }\n\n            const letsSee = () => {\n                console.log(stArray);\n                stArray.map(newItem => {\n                    let aName = newItem.name;\n                    let aComment = newItem.comment;\n                    console.log(newItem)\n                    (<SnackbarContent style={styles.bg} comment={aName + \", \" + aComment}></SnackbarContent>)\n                })\n            }\n\n            const nameList = [{'name': 'jesse'}, {'name': 'holly'} ]\n            const showNames = () => {\n                nameList.map((oneName) => {\n                    console.log(oneName.name)\n                    (<li>{oneName.name}</li>)\n                })\n            }\n\n        return(\n            <div>                \n                <p>this is the return from the api</p>\n                <div className=\"showData\">\n                    <ul className=\"theList\"></ul>\n                </div>\n                <Comment/>\n                {/* <Stack spacing={2} sx={{ maxWidth: '80%' }} style={styles.ma}>\n                    {letsSee}\n                </Stack> */}\n                <ul>\n                    {showNames}\n                </ul>\n            </div>   \n        )\n    }\n}\n\nexport default DisplayInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}