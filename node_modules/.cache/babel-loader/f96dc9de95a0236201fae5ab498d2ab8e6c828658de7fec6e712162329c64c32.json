{"ast":null,"code":"var _jsxFileName = \"/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/AddNew.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AddNew extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      comment: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(event) {\n    let someName = document.querySelector('.inputName').value;\n    let someComment = document.querySelector('.inputComment').value;\n    this.setState({\n      name: someName,\n      comment: someComment\n    });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch('http://localhost:5000/post', {\n      method: 'POST',\n      // We convert the React state to JSON and send it as the POST body\n      body: {\n        \"name\": \"jboner\",\n        \"comment\": \"loser\"\n      }\n    }).then(function (response) {\n      console.log(response);\n      return response.json();\n    });\n    this.setState({\n      name: \"\",\n      comment: \"\"\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"this is the form section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputName\",\n            type: \"text\",\n            value: this.state.name,\n            name: this.state.name,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Comment:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputComment\",\n            type: \"text\",\n            value: this.state.comment,\n            name: this.state.comment,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default AddNew;","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","AddNew","constructor","props","state","name","comment","handleChange","bind","handleSubmit","event","someName","document","querySelector","value","someComment","setState","preventDefault","fetch","method","body","then","response","console","log","json","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","type","onChange"],"sources":["/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/AddNew.js"],"sourcesContent":["import React, {Component} from 'react'\nimport axios from \"axios\";\n\nclass AddNew extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            comment: ''\n        };\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n      \n\n      handleChange(event) {\n        let someName = document.querySelector('.inputName').value;\n        let someComment = document.querySelector('.inputComment').value;\n        this.setState({\n            name: someName,\n            comment: someComment\n        });\n      }\n    \n      handleSubmit(event) {\n        event.preventDefault();\n\n            fetch('http://localhost:5000/post', {\n              method: 'POST',\n              // We convert the React state to JSON and send it as the POST body\n              body: {\"name\": \"jboner\", \"comment\": \"loser\"}\n          }).then(function(response) {\n              console.log(response)\n              return response.json();\n          });\n\n        \n        this.setState({\n            name: \"\",\n            comment:\"\"\n        });\n\n      }\n\n\n\n    render(){\n        return(\n            <div>\n                <p>this is the form section</p>\n\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                    Name:\n                    <input className=\"inputName\" type=\"text\" value={this.state.name} name={this.state.name} onChange={this.handleChange} />\n                    </label>\n                    <label>\n                    Comment:\n                    <input className=\"inputComment\" type=\"text\" value={this.state.comment} name={this.state.comment} onChange={this.handleChange} />\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddNew;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,SAASJ,SAAS;EAE1BK,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE;IACb,CAAC;IAED,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACD,IAAI,CAAC,IAAI,CAAC;EAClD;EAGAD,YAAYA,CAACG,KAAK,EAAE;IAClB,IAAIC,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC,CAACC,KAAK;IACzD,IAAIC,WAAW,GAAGH,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC,CAACC,KAAK;IAC/D,IAAI,CAACE,QAAQ,CAAC;MACVX,IAAI,EAAEM,QAAQ;MACdL,OAAO,EAAES;IACb,CAAC,CAAC;EACJ;EAEAN,YAAYA,CAACC,KAAK,EAAE;IAClBA,KAAK,CAACO,cAAc,CAAC,CAAC;IAElBC,KAAK,CAAC,4BAA4B,EAAE;MAClCC,MAAM,EAAE,MAAM;MACd;MACAC,IAAI,EAAE;QAAC,MAAM,EAAE,QAAQ;QAAE,SAAS,EAAE;MAAO;IAC/C,CAAC,CAAC,CAACC,IAAI,CAAC,UAASC,QAAQ,EAAE;MACvBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,OAAOA,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC;IAGJ,IAAI,CAACT,QAAQ,CAAC;MACVX,IAAI,EAAE,EAAE;MACRC,OAAO,EAAC;IACZ,CAAC,CAAC;EAEJ;EAIFoB,MAAMA,CAAA,EAAE;IACJ,oBACI1B,OAAA;MAAA2B,QAAA,gBACI3B,OAAA;QAAA2B,QAAA,EAAG;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAE/B/B,OAAA;QAAMgC,QAAQ,EAAE,IAAI,CAACvB,YAAa;QAAAkB,QAAA,gBAC9B3B,OAAA;UAAA2B,QAAA,GAAO,OAEP,eAAA3B,OAAA;YAAOiC,SAAS,EAAC,WAAW;YAACC,IAAI,EAAC,MAAM;YAACpB,KAAK,EAAE,IAAI,CAACV,KAAK,CAACC,IAAK;YAACA,IAAI,EAAE,IAAI,CAACD,KAAK,CAACC,IAAK;YAAC8B,QAAQ,EAAE,IAAI,CAAC5B;UAAa;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChH,CAAC,eACR/B,OAAA;UAAA2B,QAAA,GAAO,UAEP,eAAA3B,OAAA;YAAOiC,SAAS,EAAC,cAAc;YAACC,IAAI,EAAC,MAAM;YAACpB,KAAK,EAAE,IAAI,CAACV,KAAK,CAACE,OAAQ;YAACD,IAAI,EAAE,IAAI,CAACD,KAAK,CAACE,OAAQ;YAAC6B,QAAQ,EAAE,IAAI,CAAC5B;UAAa;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzH,CAAC,eACR/B,OAAA;UAAOkC,IAAI,EAAC,QAAQ;UAACpB,KAAK,EAAC;QAAQ;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEd;AACJ;AAEA,eAAe9B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}