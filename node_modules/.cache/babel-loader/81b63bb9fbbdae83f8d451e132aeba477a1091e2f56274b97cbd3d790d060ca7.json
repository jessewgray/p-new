{"ast":null,"code":"var _jsxFileName = \"/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/DisplayInfo.js\";\nimport React, { Component } from 'react';\nimport Comment from './Comment';\nimport Stack from '@mui/material/Stack';\nimport SnackbarContent from '@mui/material/SnackbarContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass DisplayInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: ''\n    };\n  }\n  render() {\n    const styles = {\n      ma: {\n        margin: 'auto'\n      },\n      bg: {\n        background: 'white',\n        color: 'black'\n      }\n    };\n    let stArray = [];\n    let getData = function () {\n      const that = this;\n      fetch('http://localhost:5000/get').then(response => response.json()).then(data => {\n        //console.log(data.dbArray)\n        const theList = data.dbArray.foreach(element => {\n          stArray.push({\n            name: element.name,\n            comment: element.comment\n          });\n        });\n        console.log(stArray);\n      }).catch(error => console.error(error));\n    }();\n\n    // const logThis = function(){\n    //     //add the parent Stack element and create the snackbarcontnet inside the loop then add log this to render.\n    //     const listObj = stArray.forEach((anything) => {\n    //         let theName = anything.name;\n    //         let theComment = anything.comment;\n    //         let theLI = `<li key={theName.toString()}>name: ${theName}, comment: ${theComment}</li>`\n    //         const theUL = window.document.querySelector('.theList')\n    //         theUL.insertAdjacentHTML('afterend', theLI)\n    //     })\n    // }\n\n    //add the parent Stack element and create the snackbarcontnet inside the loop then add log this to render.\n    // const listObj = stArray.map((anything) => (\n    //    (<SnackbarContent key={anything.name.toString()} style={styles.bg} message={anything.name + anything.comment}/>)\n    // ))\n\n    const newNames = [{\n      name: 'jesse',\n      comment: 'this is jesses comment'\n    }, {\n      name: 'holly',\n      comment: 'this is hollys comment'\n    }];\n    const showComments = newNames.map(obj => /*#__PURE__*/_jsxDEV(SnackbarContent, {\n      style: styles.bg,\n      message: obj.name + obj.comment\n    }, obj.name.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 18\n    }, this));\n\n    // setTimeout(function() {waitList()}, 3000);\n\n    // const waitList = function(){\n    //     const showNewComments = stArray.map((nextObj) => (\n    //         (<SnackbarContent key={nextObj.name.toString()} style={styles.bg} message={nextObj.name + nextObj.comment}/>)\n    //     ))\n    //     this.setState({comments:showNewComments})\n    // }\n\n    console.log(this.state.comments);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"this is the return from the api\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showData\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"theList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Comment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        sx: {\n          maxWidth: '80%'\n        },\n        style: styles.ma,\n        children: showComments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DisplayInfo;","map":{"version":3,"names":["React","Component","Comment","Stack","SnackbarContent","jsxDEV","_jsxDEV","DisplayInfo","constructor","props","state","comments","render","styles","ma","margin","bg","background","color","stArray","getData","that","fetch","then","response","json","data","theList","dbArray","foreach","element","push","name","comment","console","log","catch","error","newNames","showComments","map","obj","style","message","toString","fileName","_jsxFileName","lineNumber","columnNumber","children","className","spacing","sx","maxWidth"],"sources":["/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/DisplayInfo.js"],"sourcesContent":["import React, {Component} from 'react'\n\nimport Comment from './Comment';\n\nimport Stack from '@mui/material/Stack';\nimport SnackbarContent from '@mui/material/SnackbarContent';\n\n\nclass DisplayInfo extends Component{\n    constructor(props){\n        super(props)\n        this.state = {comments: ''}\n    }\n\n    render(){\n\n        const styles = {\n            ma:{\n                margin: 'auto'\n            },\n            bg: {\n                background: 'white',\n                color:'black'\n              }\n          };\n\n\n         \n        let stArray = []\n        let getData = function(){\n            const that = this;\n            fetch('http://localhost:5000/get')\n                    .then(response => response.json())\n                    .then((data) => {\n                        //console.log(data.dbArray)\n                        const theList = data.dbArray.foreach((element) => {\n                           stArray.push({name:element.name, comment:element.comment})\n                    })\n                    console.log(stArray)\n                    })\n                    .catch(error => console.error(error));    \n           }()\n\n            // const logThis = function(){\n            //     //add the parent Stack element and create the snackbarcontnet inside the loop then add log this to render.\n            //     const listObj = stArray.forEach((anything) => {\n            //         let theName = anything.name;\n            //         let theComment = anything.comment;\n            //         let theLI = `<li key={theName.toString()}>name: ${theName}, comment: ${theComment}</li>`\n            //         const theUL = window.document.querySelector('.theList')\n            //         theUL.insertAdjacentHTML('afterend', theLI)\n            //     })\n            // }\n\n            \n                //add the parent Stack element and create the snackbarcontnet inside the loop then add log this to render.\n                // const listObj = stArray.map((anything) => (\n                //    (<SnackbarContent key={anything.name.toString()} style={styles.bg} message={anything.name + anything.comment}/>)\n                // ))\n            \n          \n            const newNames = [{name:'jesse', comment:'this is jesses comment'}, {name:'holly', comment:'this is hollys comment'}]\n            const showComments = newNames.map((obj) => (\n                (<SnackbarContent key={obj.name.toString()} style={styles.bg} message={obj.name + obj.comment}/>)\n            ))\n           \n            \n            // setTimeout(function() {waitList()}, 3000);\n            \n            // const waitList = function(){\n            //     const showNewComments = stArray.map((nextObj) => (\n            //         (<SnackbarContent key={nextObj.name.toString()} style={styles.bg} message={nextObj.name + nextObj.comment}/>)\n            //     ))\n            //     this.setState({comments:showNewComments})\n            // }\n\n            console.log(this.state.comments)\n\n        return(\n            <div>                \n                <p>this is the return from the api</p>\n                <div className=\"showData\">\n                    <ul className=\"theList\"></ul>\n                </div>\n                <Comment/>\n\n                <Stack spacing={2} sx={{ maxWidth: '80%' }} style={styles.ma}>\n                   {showComments}\n                   \n                </Stack>\n          \n            </div>   \n        )\n    }\n}\n\nexport default DisplayInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}