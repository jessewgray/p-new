{"ast":null,"code":"var _jsxFileName = \"/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/DisplayInfo.js\";\nimport React, { Component } from 'react';\nimport Stack from '@mui/material/Stack';\nimport SnackbarContent from '@mui/material/SnackbarContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass DisplayInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: ''\n    };\n  }\n  componentDidMount() {\n    setTimeout(function () {\n      waitList;\n    }, 2000);\n  }\n  render() {\n    const styles = {\n      ma: {\n        margin: 'auto'\n      },\n      bg: {\n        background: 'white',\n        color: 'black'\n      }\n    };\n    let stArray = [];\n    let getData = function () {\n      fetch('http://localhost:5000/get').then(response => response.json()).then(data => {\n        //console.log(data.dbArray)\n        data.dbArray.forEach(element => {\n          stArray.push({\n            name: element.name,\n            comment: element.comment\n          });\n        });\n      }).catch(error => console.error(error));\n    }();\n\n    // const newNames = [{name:'jesse', comment:'this is jesses comment'}, {name:'holly', comment:'this is hollys comment'}]\n    // const showComments = newNames.map((obj) => (\n    //     (<SnackbarContent key={obj.name.toString()} style={styles.bg} message={obj.name + obj.comment}/>)\n    // ))\n\n    const waitList = () => {\n      const showNewComments = stArray.map((nextObj, i) => /*#__PURE__*/_jsxDEV(SnackbarContent, {\n        className: \"snackbar-multi-line\",\n        style: styles.bg,\n        message: nextObj.name + nextObj.comment\n      }, i.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }, this));\n      this.setState({\n        comments: showNewComments,\n        callIt: waitList()\n      });\n    };\n\n    //setTimeout(function() {waitList()}, 2000);\n    //console.log(this.state.comments)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"this is the return from the api\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showData\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"theList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        sx: {\n          maxWidth: '80%'\n        },\n        style: styles.ma,\n        children: this.state.comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DisplayInfo;","map":{"version":3,"names":["React","Component","Stack","SnackbarContent","jsxDEV","_jsxDEV","DisplayInfo","constructor","props","state","comments","componentDidMount","setTimeout","waitList","render","styles","ma","margin","bg","background","color","stArray","getData","fetch","then","response","json","data","dbArray","forEach","element","push","name","comment","catch","error","console","showNewComments","map","nextObj","i","className","style","message","toString","fileName","_jsxFileName","lineNumber","columnNumber","setState","callIt","children","spacing","sx","maxWidth"],"sources":["/Users/jessegray/Documents/jesseMac/code/apps/gitFolder/test2023/test-app/src/DisplayInfo.js"],"sourcesContent":["import React, {Component} from 'react'\n\nimport Stack from '@mui/material/Stack';\nimport SnackbarContent from '@mui/material/SnackbarContent';\n\n\n\nclass DisplayInfo extends Component{\n    constructor(props){\n        super(props)\n        this.state = {comments: ''}\n    }\n\n    componentDidMount(){\n        setTimeout(function() {waitList}, 2000);\n    }\n    \n\n    render(){\n\n        const styles = {\n            ma:{\n                margin: 'auto'\n            },\n            bg: {\n                background: 'white',\n                color:'black'\n              }\n          };\n\n\n         \n        let stArray = []\n        let getData = function(){\n            fetch('http://localhost:5000/get')\n                    .then(response => response.json())\n                    .then((data) => {\n                        //console.log(data.dbArray)\n                        data.dbArray.forEach((element) => {\n                           stArray.push({name:element.name, comment:element.comment})\n                    })\n                })\n                    .catch(error => console.error(error));    \n           }()\n\n       \n          \n            // const newNames = [{name:'jesse', comment:'this is jesses comment'}, {name:'holly', comment:'this is hollys comment'}]\n            // const showComments = newNames.map((obj) => (\n            //     (<SnackbarContent key={obj.name.toString()} style={styles.bg} message={obj.name + obj.comment}/>)\n            // ))\n               \n           \n\n            \n            const waitList = () => {\n                const showNewComments = stArray.map((nextObj, i) => (\n                    (<SnackbarContent className=\"snackbar-multi-line\" key={i.toString()} style={styles.bg} message={\n                        nextObj.name +\n                        nextObj.comment\n                    }/>)\n                ))\n                this.setState({comments:showNewComments, callIt:waitList()})\n            }\n            \n            \n            //setTimeout(function() {waitList()}, 2000);\n            //console.log(this.state.comments)\n            \n            \n\n        return(\n            <div>                \n                <p>this is the return from the api</p>\n                <div className=\"showData\">\n                    <ul className=\"theList\"></ul>\n                </div>\n                <Stack spacing={2} sx={{ maxWidth: '80%' }} style={styles.ma}>\n                   {/* {showComments} */}\n                   {this.state.comments}\n                </Stack>\n          \n            </div>   \n        )\n    }\n}\n\nexport default DisplayInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}